# -*- mode: ruby -*-
# vi: set ft=ruby :

# Requires 'vagrant-vbguest' plugin
#
# $ vagrant plugin install vagrant-vbguest
# 
# Requires 'vagrant-reload' plugin
#
# $ vagrant plugin install vagrant-reload
#
Vagrant.configure("2") do |config|

  config.vm.box = "bento/centos-7.2"

  config.vm.provision :shell, :inline => "sudo yum -y update"
  config.vm.provision :reload

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"


  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  
  # config.vm.synced_folder ".", "/vagrant", disabled: true


  # set auto_update to false, if you do NOT want to check the correct 
  # additions version when booting this machine
  # config.vbguest.auto_update = false

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
     # Display the VirtualBox GUI when booting the machine
     vb.gui = false
  
     vb.memory = 1024
     vb.cpus = 2

     vb.customize ["modifyvm", :id, "--vram", "256"]
     # Disable remote display
     vb.customize ["modifyvm", :id, "--vrde", "off"]

     vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
   end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
